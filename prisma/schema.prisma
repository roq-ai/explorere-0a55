generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model customer {
  id                      String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                 String               @db.Uuid
  sales_representative_id String               @db.Uuid
  organization_id         String               @db.Uuid
  created_at              DateTime             @default(now()) @db.Timestamp(6)
  updated_at              DateTime             @default(now()) @db.Timestamp(6)
  organization            organization         @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sales_representative    sales_representative @relation(fields: [sales_representative_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user                    user                 @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model guest {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model organization {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description   String?         @db.VarChar(255)
  name          String          @db.VarChar(255)
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  user_id       String          @db.Uuid
  tenant_id     String          @db.VarChar(255)
  customer      customer[]
  user          user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sales_manager sales_manager[]
}

model sales_manager {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id              String                 @db.Uuid
  organization_id      String                 @db.Uuid
  created_at           DateTime               @default(now()) @db.Timestamp(6)
  updated_at           DateTime               @default(now()) @db.Timestamp(6)
  organization         organization           @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user                 user                   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sales_representative sales_representative[]
}

model sales_representative {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id          String        @db.Uuid
  sales_manager_id String        @db.Uuid
  created_at       DateTime      @default(now()) @db.Timestamp(6)
  updated_at       DateTime      @default(now()) @db.Timestamp(6)
  customer         customer[]
  sales_manager    sales_manager @relation(fields: [sales_manager_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user             user          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                String                 @unique @db.VarChar(255)
  firstName            String?                @db.VarChar(255)
  lastName             String?                @db.VarChar(255)
  roq_user_id          String                 @db.VarChar(255)
  tenant_id            String                 @db.VarChar(255)
  created_at           DateTime               @default(now()) @db.Timestamp(6)
  updated_at           DateTime               @default(now()) @db.Timestamp(6)
  customer             customer[]
  guest                guest[]
  organization         organization[]
  sales_manager        sales_manager[]
  sales_representative sales_representative[]
}
